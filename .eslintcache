[{"/home/makine/Documents/bigdataodev/src/index.js":"1","/home/makine/Documents/bigdataodev/src/App.js":"2","/home/makine/Documents/bigdataodev/src/reportWebVitals.js":"3","/home/makine/Documents/bigdataodev/src/components/chart.js":"4","/home/makine/Documents/bigdataodev/src/components/table.js":"5","/home/makine/Documents/bigdataodev/src/components/tableRow.js":"6","/home/makine/Documents/bigdataodev/src/components/detail.js":"7","/home/makine/Documents/bigdataodev/src/reducers/reducer.js":"8"},{"size":775,"mtime":1612120148430,"results":"9","hashOfConfig":"10"},{"size":1215,"mtime":1612123131433,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612104110673,"results":"12","hashOfConfig":"10"},{"size":1445,"mtime":1612165510832,"results":"13","hashOfConfig":"10"},{"size":1567,"mtime":1612166814837,"results":"14","hashOfConfig":"10"},{"size":646,"mtime":1612166860930,"results":"15","hashOfConfig":"10"},{"size":758,"mtime":1612167124775,"results":"16","hashOfConfig":"10"},{"size":604,"mtime":1612166318367,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1jm2am3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/home/makine/Documents/bigdataodev/src/index.js",[],["40","41"],"/home/makine/Documents/bigdataodev/src/App.js",[],"/home/makine/Documents/bigdataodev/src/reportWebVitals.js",[],"/home/makine/Documents/bigdataodev/src/components/chart.js",["42","43"],"// import { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries } from 'react-vis';\nimport { useSelector, useDispatch } from 'react-redux'\nimport moment from 'moment'\n\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\n\n\nexport default function () {\n\n    const data = useSelector(state => state.data.graphData ? state.data.graphData : [])\n    const dispatch = useDispatch()\n    console.log(data);\n\n    data.sort((a, b) => {\n        return (new Date(a.date)).getTime() - (new Date(b.date)).getTime()\n    });\n\n    return (\n        <div>\n\n            <LineChart\n                width={900}\n                height={400}\n                data={data.map((item) => {\n                    return { y: item.saleCount, x: moment(item.date).format(\"L\") }\n\n                })}\n            >\n                <XAxis dataKey=\"x\"\n                    style={{ fontSize: \"8px\" }} />\n\n                <YAxis dataKey=\"y\"\n                    style={{ fontSize: \"8px\" }}\n                    label={{ value: \"Sale Count\", angle: -90, size: \"8px\" }}\n                />\n                <CartesianGrid stroke=\"#eee\" strokeDasharray=\"10 10\" />\n\n                <Line type=\"monotone\" dataKey=\"x\" stroke=\"#8884d8\" />\n                <Line type=\"monotone\" dataKey=\"y\" stroke=\"#825a78\" />\n                <Tooltip wrapperStyle={{ fontSize: \"8px\" }} />\n                <Legend />\n            </LineChart>\n        </div >\n\n\n\n    )\n}","/home/makine/Documents/bigdataodev/src/components/table.js",["44","45"],"import TableRow from \"./tableRow\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nexport default function () {\n    const data = useSelector(state => state.data.nodes ? state.data.nodes : [])\n    const tableHeader = useSelector(state => state.tableHeader)\n    const dispatch = useDispatch()\n    return (\n        <table className={\"table\"}>\n            <thead>\n                <tr>\n                    {\n                        tableHeader.map((item, index) => {\n                            return (\n                                <td key={index}>\n                                    {item}\n                                </td>\n                            )\n                        })\n                    }\n                </tr>\n\n            </thead>\n\n            <tbody>\n                {\n                    data.map((item, index) => {\n\n                        const { accountId, accountType, displayName, role } = item\n                        const style = index % 2 === 0 ? \"evenrow\" : \"oddrow\"\n                        return <TableRow\n                            rowstyle={style}\n                            key={index}\n                            id={item.id}\n                            index={index}\n                            data={[\n                                accountId,\n                                accountType,\n                                displayName,\n                                role\n                            ]}\n                        />\n                    })\n                }\n\n            </tbody>\n        </table>\n    )\n}","/home/makine/Documents/bigdataodev/src/components/tableRow.js",["46"],"import {\n    useHistory\n} from \"react-router-dom\"\n\nimport { useDispatch } from 'react-redux'\n\n\nexport default function ({ data, id, rowstyle, index }) {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const rowClick = (elem) => {\n        dispatch({\n            type: 'SET_SELECT',\n            selectedIndex: index\n        })\n        history.push(\"/detail/\" + id)\n    }\n\n    return (\n        <tr className={\"hoverEffect \" + rowstyle} onClick={rowClick}>\n            {\n                data.map((item, index) => {\n                    return (<td key={index}>{item}</td>)\n                })\n            }\n        </tr>\n    )\n}","/home/makine/Documents/bigdataodev/src/components/detail.js",["47","48","49"],"import { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\n\nexport default function (props) {\n    const history = useHistory()\n    const { id } = useParams()\n    const nodes = useSelector(state => state.data.nodes)\n    const index = useSelector(state => state.selectedIndex)\n\n    const keys = Object.keys(nodes[index])\n\n    return (\n        <div>\n            <button\n                onClick={() => { history.goBack() }}\n            > Go Home</button>\n            <ul className={\"detailList\"}>\n                {keys.map((item) => {\n                    return (<li> {`${item} : ${nodes[index][item]} `}  </li>)\n                })}\n            </ul>\n\n        </div>\n    )\n\n}","/home/makine/Documents/bigdataodev/src/reducers/reducer.js",["50"],"let initialState = {\n    data: [],\n    tableHeader: [\n        \"accountId\",\n        \"accountType\",\n        \"displayName\",\n        \"role\"\n    ],\n    selectedIndex: -1\n}\n\nexport default function (currentState = initialState, action) {\n    console.log(action);\n    switch (action.type) {\n        case \"SET_DATA\":\n            return {\n                ...currentState,\n                data: action.data\n            }\n        case \"SET_SELECT\":\n            return {\n                ...currentState,\n                selectedIndex: action.selectedIndex\n            }\n        default: return currentState\n\n    }\n\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":12,"column":1,"nodeType":"57","endLine":52,"endColumn":2},{"ruleId":"58","severity":1,"message":"59","line":15,"column":11,"nodeType":"60","messageId":"61","endLine":15,"endColumn":19},{"ruleId":"55","severity":1,"message":"56","line":4,"column":1,"nodeType":"57","endLine":49,"endColumn":2},{"ruleId":"58","severity":1,"message":"59","line":7,"column":11,"nodeType":"60","messageId":"61","endLine":7,"endColumn":19},{"ruleId":"55","severity":1,"message":"56","line":8,"column":1,"nodeType":"57","endLine":28,"endColumn":2},{"ruleId":"58","severity":1,"message":"62","line":2,"column":23,"nodeType":"60","messageId":"61","endLine":2,"endColumn":34},{"ruleId":"55","severity":1,"message":"56","line":5,"column":1,"nodeType":"57","endLine":27,"endColumn":2},{"ruleId":"58","severity":1,"message":"63","line":7,"column":13,"nodeType":"60","messageId":"61","endLine":7,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":12,"column":1,"nodeType":"57","endLine":29,"endColumn":2},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]